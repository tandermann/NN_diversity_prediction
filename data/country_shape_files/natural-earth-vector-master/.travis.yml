language: python

git:
  depth: 1

fast_finish: true

matrix:
    include:
        - os: osx
          language: generic
          env:
            - PY=3.6
            - nedocker=NO
          before_install:
                - brew uninstall python mercurial postgis sfcgal cgal gdal
                - brew update
                - brew upgrade
                - brew tap osgeo/osgeo4mac
                - brew outdated gdal  || brew upgrade gdal
                - brew outdated gdal2 || brew upgrade gdal2
                - brew install jq
                - wget https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh
                - bash miniconda.sh -b -p $HOME/miniconda
                - export PATH="$HOME/miniconda/bin:$PATH"
                - hash -r
                - conda update --yes conda
                - conda info -a
                - conda config --add channels conda-forge
                - conda create --yes -n test-natural-earth python=$PY
                - source activate test-natural-earth
                - echo $(python --version)
                - conda install --yes -c conda-forge fiona
                - python -c "import fiona"
                - conda install --yes -c conda-forge sparqlwrapper
                - conda install --yes -c conda-forge requests
                - pip install csvtomd
          script:
            - ./run_all.sh fast


#        - os: linux
#          env:
#            - PY=3.6
#            - nedocker=NO
#          sudo: required
#          before_install:
#                - sudo add-apt-repository ppa:ubuntugis/ubuntugis-unstable --yes
#                - sudo apt-get --yes --force-yes update -qq
#                - sudo apt-get install --yes gdal-bin jq
#                - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh  -O miniconda.sh
#                - bash miniconda.sh -b -p $HOME/miniconda
#                - export PATH="$HOME/miniconda/bin:$PATH"
#                - hash -r
#                - conda update --yes conda
#                - conda info -a
#                - conda config --add channels conda-forge
#                - conda create --yes -n test-natural-earth python=$PY
#                - source activate test-natural-earth
#                - echo $(python --version)
#                - conda install --yes -c conda-forge fiona
#                - python -c "import fiona"
#                - conda install --yes -c conda-forge sparqlwrapper
#                - conda install --yes -c conda-forge requests
#                - pip install csvtomd
#          script:
#            - ./run_all.sh


#        - language: python
#          python: 3.6
#          os: linux
#          env:
#             - nedocker=NO
#          sudo: required
#          before_install:
#                - sudo add-apt-repository ppa:ubuntugis/ubuntugis-unstable --yes
#                - sudo apt-get --yes --force-yes update -qq
#                - sudo apt-get install --yes gdal-bin jq
#                - pip3 install -U SPARQLWrapper
#                - pip3 install -U fiona
#                - python -c "import fiona"
#                - pip3 install -U csvtomd
#                - pip3 install -U requests
#          script:
#            - ./run_all.sh



#        - language: python
#          python: 3.5
#          os: linux
#          env:
#             - nedocker=NO
#          sudo: required
#          before_install:
#                - sudo add-apt-repository ppa:ubuntugis/ubuntugis-unstable --yes
#                - sudo apt-get --yes --force-yes update -qq
#                - sudo apt-get install --yes gdal-bin jq
#                - pip3 install -U SPARQLWrapper
#                - pip3 install -U fiona
#                - python -c "import fiona"
#                - pip3 install -U csvtomd
#                - pip3 install -U requests
#          script:
#            - ./run_all.sh


        - services: docker
          os: linux
          env:
             - nedocker=YES
          sudo: required
          before_install:
                - docker version
                - docker build -t ne_py3wikidata .
                - docker images
          script:
                - docker run -it -v $(pwd):/ne   ne_py3wikidata  bash run_all.sh
